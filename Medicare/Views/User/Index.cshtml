@{
    ViewData["Title"] = "User Management";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0">User Management</h2>
        <button class="btn btn-primary" type="button" onclick="showCreateUserModal()">
            <i class="bi bi-plus-circle"></i> Add New User
        </button>
    </div>

    <!-- Filter Section -->
    <div class="filter-section mb-3">
        <div class="row g-3">
            <div class="col-md-3">
                <label for="searchUser" class="form-label">Search</label>
                <input type="text" class="form-control" id="searchUser" placeholder="Name, email, role...">
            </div>
            <div class="col-md-3">
                <label for="roleFilter" class="form-label">Role</label>
                <select class="form-select" id="roleFilter">
                    <option value="">All Roles</option>
                    <option>Administrator</option>
                    <option>Doctor</option>
                    <option>Nurse</option>
                    <option>Staff</option>
                    <option>Patient</option>
                </select>
            </div>
            <div class="col-md-3">
                <label for="statusFilter" class="form-label">Status</label>
                <select class="form-select" id="statusFilter">
                    <option value="">All Statuses</option>
                    <option>Active</option>
                    <option>Inactive</option>
                    <option>Suspended</option>
                </select>
            </div>
            <div class="col-md-3 d-flex align-items-end">
                <button class="btn btn-primary me-2" id="filterDataTable">
                    <i class="bi bi-funnel"></i> Apply Filters
                </button>
                <button class="btn btn-outline-secondary" id="filterReset">
                    <i class="bi bi-arrow-counterclockwise"></i> Reset
                </button>
            </div>
        </div>
    </div>

    <!-- Users Table -->
    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover" id="userTable">
                    <thead>
                        <tr>
                            <th class="sortable asc" data-FullName>Name</th>
                            <th class="sortable" data-Email>Email</th>
                            <th class="sortable" data-UserName>Username</th>
                            <th class="sortable" data-PhoneNumber>Mobile</th>
                            <th class="sortable" data-Roles>Roles</th>
                            @* <th class="sortable" data-Role>Role</th> *@
                            <th data-IsActive>Active</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>

            <!-- Pagination -->
            <nav aria-label="User pagination">
                <ul class="pagination justify-content-end mt-4"></ul>
            </nav>
        </div>
    </div>
</div>

<!-- Create User Modal -->
<div class="modal fade" id="createUserModal" tabindex="-1" aria-labelledby="createUserModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header bg-white">
                <h5 class="modal-title" id="createUserModalLabel">
                    <i class="bi bi-person-plus me-2"></i>Add New User
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" style="max-height: 70vh; overflow-y: auto;">
                <form id="userForm" class="needs-validation" novalidate>
                    <!-- Personal Information -->
                    <div class="card mb-4">
                        <div class="card-header bg-light">
                            <h6 class="mb-0">Personal Information</h6>
                        </div>
                        <div class="card-body">
                            <div class="row g-3">
                                <div class="col-md-4">
                                    <label for="FirstName" class="form-label required">First Name</label>
                                    <input class="form-control" id="FirstName" name="FirstName" required />
                                    <div class="invalid-feedback">Please provide a first name.</div>
                                </div>
                                <div class="col-md-4">
                                    <label for="MiddleName" class="form-label">Middle Name</label>
                                    <input class="form-control" id="MiddleName" name="MiddleName" />
                                    <div class="invalid-feedback"></div>
                                </div>
                                <div class="col-md-4">
                                    <label for="LastName" class="form-label required">Last Name</label>
                                    <input class="form-control" id="LastName" name="LastName" required />
                                    <div class="invalid-feedback">Please provide a last name.</div>
                                </div>
                                <div class="col-md-4">
                                    <label for="Email" class="form-label required">Email</label>
                                    <input class="form-control" id="Email" name="Email" type="email" required />
                                    <div class="invalid-feedback">Please provide a valid email address.</div>
                                </div>
                                <div class="col-md-4">
                                    <label for="Phone" class="form-label required">Phone Number</label>
                                    <input class="form-control" id="Phone" name="Phone" type="tel"
                                           pattern="[0-9]{10}" maxlength="10" required />
                                    <div class="invalid-feedback">Please provide a valid 10-digit phone number.</div>
                                </div>
                                <div class="col-md-4">
                                    <label for="Gender" class="form-label required">Gender</label>
                                    <select class="form-select" id="Gender" name="Gender" required>
                                        <option value="">Select Gender</option>
                                        <option>Male</option>
                                        <option>Female</option>
                                        <option>Other</option>
                                    </select>
                                    <div class="invalid-feedback">Please select a gender.</div>
                                </div>
                                <div class="col-md-4">
                                    <label for="DateOfBirth" class="form-label">Date of Birth</label>
                                    <input class="form-control" id="DateOfBirth" name="DateOfBirth" type="date" />
                                    <div class="invalid-feedback"></div>
                                </div>
                                <div class="col-md-4">
                                    <label for="Photo" class="form-label">Profile Photo</label>
                                    <input class="form-control" type="file" id="Photo" name="Photo" accept="image/*" />
                                    <div class="invalid-feedback"></div>
                                </div>
                                <div class="col-md-4">
                                    <label for="Address" class="form-label">Address</label>
                                    <textarea class="form-control" id="Address" name="Address" rows="2"></textarea>
                                    <div class="invalid-feedback"></div>
                                </div>
                                
                            </div>
                        </div>
                    </div>

                    <!-- Account Information -->
                    <div class="card mb-4">
                        <div class="card-header bg-light">
                            <h6 class="mb-0">Account Information</h6>
                        </div>
                        <div class="card-body">
                            <div class="row g-3">
                                <div class="col-md-4">
                                    <label for="Username" class="form-label required">Username</label>
                                    <input class="form-control" id="Username" name="Username" required />
                                    <div class="invalid-feedback">Please provide a username.</div>
                                </div>
                                @* <div class="col-md-4">
                                    <label for="Password" class="form-label required">Password</label>
                                    <div class="input-group">
                                        <input class="form-control" id="Password" name="Password" type="password" required />
                                        <span class="input-group-text password-toggle" id="passwordToggle">
                                            <i class="bi bi-eye"></i>
                                        </span>
                                    </div>
                                    <div class="invalid-feedback">Password must be at least 8 characters long.</div>
                                    <div class="form-text">Password must be at least 8 characters long</div>
                                </div>
                                <div class="col-md-4">
                                    <label for="ConfirmPassword" class="form-label required">Confirm Password</label>
                                    <input class="form-control" id="ConfirmPassword" name="ConfirmPassword" type="password" required />
                                    <div class="invalid-feedback">Passwords do not match.</div>
                                </div> *@
                                <div class="col-md-4">
                                    <label for="RoleId" class="form-label required">Role</label>
                                    <select class="form-select select2-multiple" id="RoleId" name="RoleId" multiple="multiple" required>
                                        <option value="1">Administrator</option>
                                        <option value="2">Doctor</option>
                                        <option value="3">Nurse</option>
                                        <option value="4">Staff</option>
                                        <option value="5">Patient</option>
                                    </select>
                                    <div class="invalid-feedback">Please select at least one role.</div>
                                </div>
                               @*  <div class="col-md-6">
                                    <label for="Status" class="form-label required">Status</label>
                                    <select class="form-select" id="Status" name="Status" required>
                                        <option value="">Select Status</option>
                                        <option>Active</option>
                                        <option>Inactive</option>
                                        <option>Suspended</option>
                                    </select>
                                    <div class="invalid-feedback">Please select a status.</div>
                                </div> *@
                                <div class="col-md-4">
                                    <label for="CreatedAt" class="form-label">Created At</label>
                                    <input class="form-control" id="CreatedAt" name="CreatedAt" readonly />
                                    <div class="invalid-feedback"></div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Additional Information -->
                    <div class="card mb-3">
                        <div class="card-header bg-light">
                            <h6 class="mb-0">Additional Information</h6>
                        </div>
                        <div class="card-body">
                            <div class="row g-3">
                                <div class="col-md-6">
                                    <label for="DepartmentId" class="form-label">Department</label>
                                    <select class="form-select" id="DepartmentId" name="DepartmentId"></select>
                                    <div class="invalid-feedback"></div>
                                </div>
                                <div class="col-md-6">
                                    <label for="EmergencyContact" class="form-label">Emergency Contact</label>
                                    <input class="form-control" id="EmergencyContact" name="EmergencyContact"
                                           type="tel" pattern="[0-9]{10}" maxlength="10" />
                                    <div class="invalid-feedback">Please provide a valid 10-digit phone number.</div>
                                </div>
                                <div class="col-12">
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" id="SendWelcomeEmail" name="SendWelcomeEmail" checked>
                                        <label class="form-check-label" for="SendWelcomeEmail">
                                            Send welcome email with login instructions
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="bi bi-x-circle me-1"></i> Cancel
                </button>
                <button type="button" class="btn btn-primary" id="saveUserBtn">
                    <i class="bi bi-save me-1"></i> Save User
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        $(function () {
            var $userTable = $('#userTable').customedatatable('@Url.Action("GetUsers", "User")', {}, {
                length: 5,
                sortableColumns: ['FullName', 'Email', 'Role', 'Status'],
                columnHtmlBuilder: {
                    isactive: function (row) {
                        const checked = row.isactive ? "checked" : "";
                        return `<td>
                            <div class="form-check form-switch">
                                <input class="form-check-input active-toggle"
                                       type="checkbox"
                                       data-id="${row.id}" ${checked}>
                            </div>
                        </td>`;
                    },
                    roles: function (row) {
                        return `<td><strong>${row.roles}</strong></td>`;
                    }
                },
                rowActionBuilder: function (row) {
                    return `<td>
                        <button class="btn btn-sm btn-outline-primary me-1" onclick="viewUser('${row.id}')"><i class="bi bi-eye"></i></button>
                        <button class="btn btn-sm btn-outline-secondary me-1" onclick="editUser('${row.id}')"><i class="bi bi-pencil"></i></button>
                        <button class="btn btn-sm btn-outline-danger deleteButton" data-id="${row.id}" onclick="deleteUser('${row.id}')"><i class="bi bi-trash"></i></button>
                    </td>`;
                },
                onDataLoaded: function(info) {
                    if (info.filtersApplied.Role) {
                        $('#roleFilter').css('background-color', '#e9ecef');
                    }
                    else {
                        $('#roleFilter').val('');
                        $('#roleFilter').css('background-color', '#ffff');
                    }
                }
            }, '#searchUser');

            $('#filterDataTable').click(function(){
                const role = $('#roleFilter').val();
                const status = $('#statusFilter').val();

                const tableData = $userTable.data('customedatatable-data') || {};
                tableData.Data = tableData.Data || {};

                if (tableData.Data.Role !== role || tableData.Data.Status !== status) {
                    tableData.Data.Role = role;
                    tableData.Data.Status = status;

                    $userTable.data('customedatatable-data', tableData);
                    $userTable.data('refresh')();
                }
            });

            $('#filterReset').click(function() {
                const tableData = $userTable.data('customedatatable-data') || {};
                if (Object.keys(tableData.Data).length > 0) {
                    tableData.Data = {};
                    $userTable.data('customedatatable-data', tableData);
                    $userTable.data('refresh')();

                    // Reset filter UI
                    $('#roleFilter').val('');
                    $('#statusFilter').val('');
                }
            });

            $($userTable).on('click', '.active-toggle', function () {
                const $toggleButton = $(this);
                const userId = $($toggleButton).data('id');
                const isActive = $($toggleButton).is(':checked');

                    // Dynamically set context values
                const context = isActive
                    ? {
                        title: "Activate User?",
                        text: "Are you sure you want to activate this user?",
                        confirmButtonText: "Yes, Activate",
                        confirmButtonColor: "#198754" // Bootstrap green
                    }
                    : {
                        title: "Deactivate User?",
                        text: "Are you sure you want to deactivate this user?",
                        confirmButtonText: "Yes, Deactivate",
                        confirmButtonColor: "#d33" // Bootstrap red
                    };

                Swal.fire({
                    title: context.title,
                    text: context.text,
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: context.confirmButtonColor,
                    cancelButtonColor: "#6c757d", // Bootstrap secondary
                    confirmButtonText: context.confirmButtonText
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Call API here
                        $.ajax({
                            url: '@Url.Action("ChangeUserStatus", "User")',
                            type: 'POST',
                            data: { id: userId, isActive: isActive },
                            beforeSend: function () {
                                AjaxLoader.show();
                            },
                            complete: function () {
                                AjaxLoader.hide();
                            },
                            success: function (response) {
                                if(response.success){
                                    Swal.fire("Success", response.message, "success");
                                }
                                else{
                                    Swal.fire("Error", "Failed to update user status", "error");
                                     $($toggleButton).prop('checked', !isActive);
                                }
                            },
                            error: function (response) {
                                Swal.fire("Error", "Failed to update user status", "error");
                                 $($toggleButton).prop('checked', !isActive);
                            }
                        });
                    } else {
                        // Revert the toggle if cancelled
                        $($toggleButton).prop('checked', !isActive);
                    }
                });
            });
        });

        const createUserModal = new bootstrap.Modal(document.getElementById('createUserModal'));

        function showCreateUserModal() {
            const now = new Date();
            document.getElementById('CreatedAt').value = now.toISOString().slice(0, 16);

            // Load departments
            $('#DepartmentId').loadDropdownData(
                '@Url.Action("Department", "Dropdown")'
            ).done(function () {
                $('#DepartmentId').select2({
                    placeholder: "Select Department",
                    width: '100%',
                    dropdownParent: $('#createUserModal')
                });
            });

            $('#RoleId').loadDropdownData(
                '@Url.Action("Roles", "Dropdown")'
                ).done(function () {
                $('#RoleId')
                    .attr('multiple', 'multiple')       // ensure multi-select
                    .select2({
                        placeholder: "Select Roles",
                        width: '100%',
                        dropdownParent: $('#createUserModal')
                 });
            });

            // Password toggle functionality
            $('#passwordToggle').off('click').on('click', function() {
                const passwordInput = $('#Password');
                const type = passwordInput.attr('type') === 'password' ? 'text' : 'password';
                passwordInput.attr('type', type);

                const eyeIcon = $(this).find('i');
                if (type === 'text') {
                    eyeIcon.removeClass('bi-eye').addClass('bi-eye-slash');
                } else {
                    eyeIcon.removeClass('bi-eye-slash').addClass('bi-eye');
                }
            });

            createUserModal.show();
        }

        document.getElementById('saveUserBtn').addEventListener('click', async function () {
            const form = document.getElementById('userForm');
            if (form.checkValidity()) {
                // Validate password match
                const password = $('#Password').val();
                const confirmPassword = $('#ConfirmPassword').val();

                // if (password !== confirmPassword) {
                //     Swal.fire({
                //         icon: 'error',
                //         title: 'Password Mismatch',
                //         text: 'Password and confirmation password do not match.'
                //     });
                //     return;
                // }

                // Validate password strength
                // if (password.length < 8) {
                //     Swal.fire({
                //         icon: 'error',
                //         title: 'Weak Password',
                //         text: 'Password must be at least 8 characters long.'
                //     });
                //     return;
                // }


                const userData = {
                    FirstName: $('#FirstName').val(),
                    LastName: $('#LastName').val(),
                    Gender: $('#Gender').val(),
                    DateOfBirth: $('#DateOfBirth').val(),
                    Email: $('#Email').val(),
                    PhoneNumber: $('#Phone').val(),
                    Address: $('#Address').val(),
                    UserName: $('#Username').val(),
                    Password: password,
                    
                    Status: $('#Status').val(),
                    DepartmentId: $('#DepartmentId').val(),
                    EmergencyContact: $('#EmergencyContact').val(),
                    SendWelcomeEmail: $('#SendWelcomeEmail').is(':checked'),
                    CreatedAt: new Date($('#CreatedAt').val()).toISOString(),
                    FullName: `${$('#FirstName').val()} ${$('#LastName').val()}`,
                    Photo: $('#Photo')[0].files.length > 0 ? $('#Photo')[0].files[0].name : null,

                    UserRoles: $('#RoleId').val()
                };
                console.log(userData);
                $(this).prop('disabled', true);
                postData('@Url.Action("AddUser", "User")', userData, {
                    success: function (response) {
                        debugger;
                        console.log(response)
                        if (response.success) {
                            createUserModal.hide();
                            $('#userTable').data('refresh')();
                            Swal.fire({
                                icon: 'success',
                                title: 'User Created',
                                text: 'User has been successfully created.'
                            });
                        }
                    },
                    error: function (error) {
                        debugger;
                        console.log(error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'An error occurred while creating the user.'
                        });
                    },
                    complete: function() {
                        $(this).removeAttr('disabled');
                    }
                });
            } else {
                form.classList.add('was-validated');
            }
        });

        function viewUser(id) {
            // Implementation for viewing user details
            window.location.href = '@Url.Action("Details", "User")' + '?id=' + id;
        }

        function editUser(id) {
            // Implementation for editing user
            window.location.href = '@Url.Action("Edit", "User")' + '?id=' + id;
        }

        function deleteUser(id) {
            deleteData('@Url.Action("DeleteUser", "User")', { id: id }, {
                showSuccess: true,
                showError: true,
                confirmText: 'User will be deleted!',
                success: function (response) {
                    if(response.success) {
                        $("button[data-id='" + id + "']").closest("tr").fadeOut(500, function () {
                            $(this).remove();
                        });
                    }
                }
            });
        }
    </script>
}