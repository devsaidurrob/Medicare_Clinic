// <auto-generated />
using System;
using Medicare.Repository.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Medicare.Repository.Migrations
{
    [DbContext(typeof(MedicareDbContext))]
    [Migration("20250912065541_alter_doctorTable")]
    partial class alter_doctorTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("OPD")
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Medicare.Repository.Entity.Appointment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("AppointmentTime")
                        .HasColumnType("time");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<Guid>("DoctorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("Appointments", "OPD");
                });

            modelBuilder.Entity("Medicare.Repository.Entity.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments", "OPD");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Cardiology"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Neurology"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Orthopedics"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Pediatrics"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Dermatology"
                        },
                        new
                        {
                            Id = 6,
                            Name = "ENT (Ear, Nose, Throat)"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Gynecology & Obstetrics"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Oncology"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Ophthalmology"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Psychiatry"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Pulmonology"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Gastroenterology"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Nephrology"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Endocrinology"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Urology"
                        },
                        new
                        {
                            Id = 16,
                            Name = "General Surgery"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Emergency Medicine"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Radiology"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Pathology"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Dentistry"
                        });
                });

            modelBuilder.Entity("Medicare.Repository.Entity.Doctor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Deleted");

                    b.ToTable("Doctors", "OPD");
                });

            modelBuilder.Entity("Medicare.Repository.Entity.DoctorDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<Guid>("DoctorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DoctorId");

                    b.ToTable("DoctorDepartments", "OPD");
                });

            modelBuilder.Entity("Medicare.Repository.Entity.DoctorSpecialization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("DoctorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SpecializationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("SpecializationId");

                    b.ToTable("DoctorSpecializations", "OPD");
                });

            modelBuilder.Entity("Medicare.Repository.Entity.Patient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlternatePhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BloodGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyContactName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaritalStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Patients", "OPD");
                });

            modelBuilder.Entity("Medicare.Repository.Entity.Specialization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Specializations", "OPD");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Specializes in catheter-based treatment of heart diseases.",
                            Name = "Interventional Cardiology"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Focuses on heart problems in children.",
                            Name = "Pediatric Cardiology"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Surgical treatment of neurological disorders.",
                            Name = "Neuro Surgery"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Expert in stroke prevention and management.",
                            Name = "Stroke Specialist"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Surgical care of spinal disorders.",
                            Name = "Spine Surgery"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Specialist in hip, knee, and joint replacement.",
                            Name = "Joint Replacement"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Neurological care for children.",
                            Name = "Pediatric Neurology"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Skin disease specialist with pathology expertise.",
                            Name = "Dermatopathology"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Focus on aesthetic skin treatments.",
                            Name = "Cosmetic Dermatology"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Performs surgery on ear, nose, and throat.",
                            Name = "ENT Surgeon"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Specialist in fertility and hormonal disorders.",
                            Name = "Reproductive Endocrinology"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Expert in cancers of the female reproductive system.",
                            Name = "Gynecologic Oncology"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Cancer treatment using radiation.",
                            Name = "Radiation Oncology"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Performs cataract surgeries.",
                            Name = "Cataract Specialist"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Treats glaucoma and eye pressure disorders.",
                            Name = "Glaucoma Specialist"
                        },
                        new
                        {
                            Id = 16,
                            Description = "Mental health care for children and adolescents.",
                            Name = "Child Psychiatry"
                        },
                        new
                        {
                            Id = 17,
                            Description = "Diagnosis and treatment of sleep disorders.",
                            Name = "Sleep Medicine"
                        },
                        new
                        {
                            Id = 18,
                            Description = "Specialist in ICU care for lung-related issues.",
                            Name = "Pulmonary Critical Care"
                        },
                        new
                        {
                            Id = 19,
                            Description = "Focus on liver diseases.",
                            Name = "Liver Specialist (Hepatology)"
                        },
                        new
                        {
                            Id = 20,
                            Description = "Surgical management of endocrine disorders.",
                            Name = "Endocrine Surgery"
                        },
                        new
                        {
                            Id = 21,
                            Description = "Male reproductive health specialist.",
                            Name = "Andrology"
                        },
                        new
                        {
                            Id = 22,
                            Description = "Emergency surgical care for trauma patients.",
                            Name = "Trauma Surgeon"
                        },
                        new
                        {
                            Id = 23,
                            Description = "Interprets medical imaging like X-rays, MRI, and CT scans.",
                            Name = "Radiologist"
                        },
                        new
                        {
                            Id = 24,
                            Description = "Performs surgical procedures on mouth and jaw.",
                            Name = "Oral Surgeon"
                        },
                        new
                        {
                            Id = 25,
                            Description = "Specialist in children's dental health.",
                            Name = "Pediatric Dentist"
                        });
                });

            modelBuilder.Entity("Medicare.Repository.Entity.Appointment", b =>
                {
                    b.HasOne("Medicare.Repository.Entity.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Medicare.Repository.Entity.Doctor", "Doctor")
                        .WithMany("Appointments")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Medicare.Repository.Entity.Patient", "Patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Medicare.Repository.Entity.DoctorDepartment", b =>
                {
                    b.HasOne("Medicare.Repository.Entity.Department", "Department")
                        .WithMany("DoctorDepartments")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Medicare.Repository.Entity.Doctor", "Doctor")
                        .WithMany("DoctorDepartments")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("Medicare.Repository.Entity.DoctorSpecialization", b =>
                {
                    b.HasOne("Medicare.Repository.Entity.Doctor", "Doctor")
                        .WithMany("DoctorSpecializations")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Medicare.Repository.Entity.Specialization", "Specialization")
                        .WithMany("DoctorSpecializations")
                        .HasForeignKey("SpecializationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Specialization");
                });

            modelBuilder.Entity("Medicare.Repository.Entity.Department", b =>
                {
                    b.Navigation("DoctorDepartments");
                });

            modelBuilder.Entity("Medicare.Repository.Entity.Doctor", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("DoctorDepartments");

                    b.Navigation("DoctorSpecializations");
                });

            modelBuilder.Entity("Medicare.Repository.Entity.Patient", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("Medicare.Repository.Entity.Specialization", b =>
                {
                    b.Navigation("DoctorSpecializations");
                });
#pragma warning restore 612, 618
        }
    }
}
